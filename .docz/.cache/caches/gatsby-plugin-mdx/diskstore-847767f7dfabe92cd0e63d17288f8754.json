{"expireTime":9007200832239498000,"key":"gatsby-plugin-mdx-entire-payload-5ca82594aacf83f8a5acbb71d45f9156-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/home/marco/projetos/projetosemcurso/rocketseat/vuttr/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":132,"offset":133},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":135},"end":{"line":5,"column":29,"offset":163},"indent":[]}},{"type":"import","value":"import { Playground } from 'docz'\nimport ReactModal from './index'","position":{"start":{"line":8,"column":1,"offset":166},"end":{"line":9,"column":33,"offset":232},"indent":[1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Modal","position":{"start":{"line":11,"column":3,"offset":236},"end":{"line":11,"column":8,"offset":241},"indent":[]}}],"position":{"start":{"line":11,"column":1,"offset":234},"end":{"line":11,"column":8,"offset":241},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Você deve importa o ReactModal e passar duas props obrigatorias, que são:\nopen e handleModal","position":{"start":{"line":13,"column":1,"offset":243},"end":{"line":14,"column":19,"offset":335},"indent":[1]}}],"position":{"start":{"line":13,"column":1,"offset":243},"end":{"line":14,"column":19,"offset":335},"indent":[1]}},{"type":"jsx","value":"<Playground>\n  <ReactModal open={false} handleModal={() => {}} label=\"Name\" >\n    <span>Teste</span>\n  </ReactModal>\n</Playground>","position":{"start":{"line":16,"column":1,"offset":337},"end":{"line":20,"column":14,"offset":467},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"A props open recebe o valor do campo check (true / false)","position":{"start":{"line":23,"column":1,"offset":470},"end":{"line":23,"column":58,"offset":527},"indent":[]}}],"position":{"start":{"line":23,"column":1,"offset":470},"end":{"line":23,"column":58,"offset":527},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"  const [check, setCheck] = useState(false);\n\n  const handleModal = () => {\n    setModal(!modal);\n  };\n","position":{"start":{"line":25,"column":1,"offset":529},"end":{"line":32,"column":4,"offset":642},"indent":[1,1,1,1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":37,"column":1,"offset":647},"end":{"line":37,"column":31,"offset":677},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":37,"column":31,"offset":677}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\nimport DefaultLayout from \"/home/marco/projetos/projetosemcurso/rocketseat/vuttr/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nimport { Playground } from 'docz'\nimport ReactModal from './index'\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"modal\"\n    }}>{`Modal`}</h1>\n    <p>{`Você deve importa o ReactModal e passar duas props obrigatorias, que são:\nopen e handleModal`}</p>\n    <Playground __position={0} __code={'<ReactModal open={false} handleModal={() => {}} label=\\\"Name\\\">\\n  <span>Teste</span>\\n</ReactModal>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      ReactModal\n    }} mdxType=\"Playground\">\n  <ReactModal open={false} handleModal={() => {}} label=\"Name\" mdxType=\"ReactModal\">\n    <span>Teste</span>\n  </ReactModal>\n    </Playground>\n    <p>{`A props open recebe o valor do campo check (true / false)`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`  const [check, setCheck] = useState(false);\n\n  const handleModal = () => {\n    setModal(!modal);\n  };\n\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}