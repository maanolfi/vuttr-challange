{"expireTime":9007200832239498000,"key":"gatsby-plugin-mdx-entire-payload-0b8e05f64dfe21d04f7df3724ebe8a16-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/home/marco/projetos/projetosemcurso/rocketseat/vuttr/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":132,"offset":133},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":135},"end":{"line":5,"column":29,"offset":163},"indent":[]}},{"type":"import","value":"import { Form, Input } from '@rocketseat/unform';","position":{"start":{"line":8,"column":1,"offset":166},"end":{"line":8,"column":50,"offset":215},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Form create tool","position":{"start":{"line":10,"column":3,"offset":219},"end":{"line":10,"column":19,"offset":235},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":217},"end":{"line":10,"column":19,"offset":235},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Formulário feito com a lib ","position":{"start":{"line":12,"column":1,"offset":237},"end":{"line":12,"column":28,"offset":264},"indent":[]}},{"type":"link","title":null,"url":"https://github.com/Rocketseat/unform","children":[{"type":"text","value":"Unform","position":{"start":{"line":12,"column":29,"offset":265},"end":{"line":12,"column":35,"offset":271},"indent":[]}}],"position":{"start":{"line":12,"column":28,"offset":264},"end":{"line":12,"column":74,"offset":310},"indent":[]}},{"type":"text","value":". Schema de validação usando a lib Yup.","position":{"start":{"line":12,"column":74,"offset":310},"end":{"line":12,"column":113,"offset":349},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":237},"end":{"line":12,"column":113,"offset":349},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"\nconst schema = Yup.object().shape({\n  title: Yup.string().required(),\n  link: Yup.string().required(),\n  description: Yup.string()\n    .max(500)\n    .required('Max 500 caracters'),\n  tags: Yup.string(),\n});\n","position":{"start":{"line":14,"column":1,"offset":351},"end":{"line":25,"column":4,"offset":569},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"code","lang":"js","meta":null,"value":"import React from 'react';\nimport { Form, Input } from '@rocketseat/unform';\n\nfunction App() {\n\n  function handleSubmit(data) {\n    console.log(data);\n\n    /**\n     * {\n     *   title: 'Tool chrome',\n     *   link: 'google.com',\n     *   description: 'most used search tool in the world',\n     *   tags: 'google, tool, search'\n     * }\n     */\n  }\n\n  return (\n    <Form schema={schema} onSubmit={handleSubmit}>\n        <Input name=\"title\" />\n        <Input name=\"link\" />\n        <Input multiline name=\"description\" />\n        <Input name=\"tags\" type=\"text\" placeholder=\"comma separated\" />\n          <button type=\"submit\">Enviar</button>\n      </Form>\n  );\n}","position":{"start":{"line":27,"column":1,"offset":571},"end":{"line":56,"column":4,"offset":1240},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":59,"column":1,"offset":1243},"end":{"line":59,"column":31,"offset":1273},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":59,"column":31,"offset":1273}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\nimport DefaultLayout from \"/home/marco/projetos/projetosemcurso/rocketseat/vuttr/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nimport { Form, Input } from '@rocketseat/unform';\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"form-create-tool\"\n    }}>{`Form create tool`}</h1>\n    <p>{`Formulário feito com a lib `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/Rocketseat/unform\"\n      }}>{`Unform`}</a>{`. Schema de validação usando a lib Yup.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`\nconst schema = Yup.object().shape({\n  title: Yup.string().required(),\n  link: Yup.string().required(),\n  description: Yup.string()\n    .max(500)\n    .required('Max 500 caracters'),\n  tags: Yup.string(),\n});\n\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import React from 'react';\nimport { Form, Input } from '@rocketseat/unform';\n\nfunction App() {\n\n  function handleSubmit(data) {\n    console.log(data);\n\n    /**\n     * {\n     *   title: 'Tool chrome',\n     *   link: 'google.com',\n     *   description: 'most used search tool in the world',\n     *   tags: 'google, tool, search'\n     * }\n     */\n  }\n\n  return (\n    <Form schema={schema} onSubmit={handleSubmit}>\n        <Input name=\"title\" />\n        <Input name=\"link\" />\n        <Input multiline name=\"description\" />\n        <Input name=\"tags\" type=\"text\" placeholder=\"comma separated\" />\n          <button type=\"submit\">Enviar</button>\n      </Form>\n  );\n}\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}